---
title: "Report #2"
format: pdf
params:
  MRN_patient: "7487648492"
---

## HLA Typing

Quarto enables you to weave together content and executable code into a finished document. Things you write here will show up on the final document.

## Running Code

When you click the **Render** button a document will be generated that includes both content (what you're reading right now) and the output of code chunks. You can embed code like this:

```{r}
library(tidyverse)
library(RSQLite)

# Connect to the database.
con <- dbConnect(drv = SQLite(), 
                 dbname = "LIS_database.db", # The file that contains our database
                 extended_types = T) 

# Create an R object for the "Patient" table in the database.
(Patient_table <- tbl(con, "Patient")) 

# The parameters cannot be directly translated to SQL code below, so it is first put into an R element here, and that element is called in the code below.
MRN_patient <- params$MRN_patient

# Pull out the typing info for the patient using the MRN in the parameters.
(J.Linnon <- 
  Patient_table %>% 
  filter(HospitalID == MRN_patient) %>% 
  select(A1Cd:dq2cd)
)

# Pull out the first allele at each locus.
(typing_1 <- J.Linnon %>% 
  select(contains("1")) %>%  # Select the columns.
  # Rename the columns.
  rename(A = A1Cd) %>% 
  rename(B = B1Cd) %>% 
  rename(Bw = BW1Cd) %>% 
  rename(Cw = Cw1Cd) %>%
  rename(DR = DR1Cd) %>%
  rename("DR51/52/53" = drw1cd) %>% 
  rename(DQ = dq1cd) %>% 
    collect # Pull the data into R.
  )

# Pull out the first allele at each locus.
(typing_2 <- J.Linnon %>% 
  select(contains("2")) %>%  # Select the columns.
  # Rename the columns.
  rename(A = A2Cd) %>% 
  rename(B = B2Cd) %>% 
  rename(Bw = Bw2Cd) %>% 
  rename(Cw = Cw2Cd) %>%
  rename(DR = DR2Cd) %>%
  rename("DR51/52/53" = drw2cd) %>% 
  rename(DQ = dq2cd) %>% 
    collect # Pull the data into R.
  )

# Place the two alleles on top of each other by binding the rows of the two tables.
(typing_report <- typing_1 %>% bind_rows(typing_2))
```


