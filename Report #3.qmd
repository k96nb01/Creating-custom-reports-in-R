---
title: "Report #3"
subtitle: "DSA graphing report"
params:
  MRN_patient: "7487648492"
  First_name_donor: "AJG5407"
format:
  pdf:
    pdf-engine: xelatex
    papersize: letter
    geometry:
      - top=1in
      - left=1in
      - right=1in
    fontsize: 11pt
---

## HLA Typing

```{r}
#| include: false 
# This line tells the Quarto document not to show the code or the output of this chunk in the final report.

library(tidyverse)
library(RSQLite)
library(kableExtra)

# Connect to the database.
con <- dbConnect(drv = SQLite(), 
                 dbname = "LIS_database.db", # The file that contains our database
                 extended_types = T) 

# Create an R object for the "Patient" table in the database.
(Patient_table <- tbl(con, "Patient")) 

# The parameters cannot be directly translated to SQL code below, so it is first put into an R element here, and that element is called in the code below.
MRN_patient <- params$MRN_patient

# Pull out the typing info for the patient using the MRN in the parameters.
(Patient_for_report <- 
  Patient_table %>% 
  filter(HospitalID == MRN_patient) %>% 
  select(A1Cd:dq2cd)
)

# Pull out the first allele at each locus.
(typing_1 <- Patient_for_report %>% 
  select(contains("1")) %>%  # Select the columns.
  # Rename the columns.
  rename(A = A1Cd) %>% 
  rename(B = B1Cd) %>% 
  rename(Bw = BW1Cd) %>% 
  rename(Cw = Cw1Cd) %>%
  rename(DR = DR1Cd) %>%
  rename("DR51/52/53" = drw1cd) %>% 
  rename(DQ = dq1cd) %>% 
    collect # Pull the data into R.
  )

# Pull out the second allele at each locus.
(typing_2 <- Patient_for_report %>% 
  select(contains("2")) %>%  # Select the columns.
  # Rename the columns.
  rename(A = A2Cd) %>% 
  rename(B = B2Cd) %>% 
  rename(Bw = Bw2Cd) %>% 
  rename(Cw = Cw2Cd) %>%
  rename(DR = DR2Cd) %>%
  rename("DR51/52/53" = drw2cd) %>% 
  rename(DQ = dq2cd) %>% 
    collect # Pull the data into R.
  )

# Place the two alleles on top of each other by binding the rows of the two tables.
(typing_report <- typing_1 %>% 
    bind_rows(typing_2) %>% 
    mutate(across(A:DQ, ~replace_na(., ""))) # replace the missing "NA" values with blank values so it looks nice on the report.
    )
```

```{r}
#| echo: false
# This line tells the Quarto document to only show the output, but not the code, from this chunk.

# Output table
kbl(typing_report, booktabs = TRUE, caption = " Serologic Typing", col.names = c('A', 'B', 'Bw', 'Cw', 'DR', 'DR5X', 'DQ')) %>% # This passes the table made above to the `kable` package, which will output it nicely for the report.
  kable_styling(full_width = T) %>% # Make the table take up the full width of the page.
  kable_styling(latex_options = "hold_position") # Make the table appear at the top of the page where we want it.
```

```{r}
#| include: false

# It's always a good idea to close the connection to the database when you're done.
dbDisconnect(con)
```


